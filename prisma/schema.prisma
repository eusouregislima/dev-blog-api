generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String            @id @default(cuid())
  userName        String            @unique @db.VarChar(255)
  email           String            @unique @db.VarChar(255)
  password        String            @db.VarChar(255)
  description     String?
  coins           Int               @default(10)
  articles        Article[]
  comments        Comment[]
  CoinTransaction CoinTransaction[]
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
}

model Article {
  id              String            @id @default(cuid())
  title           String            @unique @db.VarChar(255)
  slug            String            @db.VarChar(255)
  subtitle        String            @db.VarChar(255)
  content         String
  authorId        String
  author          User              @relation(fields: [authorId], references: [id])
  tags            String[]
  comments        Comment[]
  coins           Int               @default(1)
  CoinTransaction CoinTransaction[]
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
}

model Comment {
  id        String    @id @default(cuid())
  content   String    @db.Text
  authorId  String
  author    User      @relation(fields: [authorId], references: [id])
  articleId String
  article   Article   @relation(fields: [articleId], references: [id])
  parentId  String?
  parent    Comment?  @relation("ReplyToComment", fields: [parentId], references: [id], onDelete: Cascade)
  replies   Comment[] @relation("ReplyToComment")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model CoinTransaction {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  articleId String
  article   Article  @relation(fields: [articleId], references: [id])
  type      CoinType
  createdAt DateTime @default(now())
}

enum CoinType {
  LIKE
  DISLIKE
}
